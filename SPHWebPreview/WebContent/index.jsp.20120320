<%@ page language="java" %>
<%@ page import="de.atex.h11.custom.sph.export.webapp.*"%>
<%@ page import="java.util.*" %>
<%@ page import="java.io.*" %>
<%@ page import="com.unisys.media.cr.adapter.ncm.model.data.datasource.NCMDataSource" %>
<%@ page import="com.unisys.media.cr.adapter.ncm.common.data.pk.NCMObjectPK" %>
<%@ page import="javax.xml.transform.Transformer" %>
<%@ page import="javax.xml.transform.TransformerFactory" %>
<%@ page import="javax.xml.transform.stream.StreamResult" %>
<%@ page import="javax.xml.transform.stream.StreamSource" %>

<%
        	NCMDataSource ds = null;
        	String strUser = request.getParameter("user");
	        String strPasswd = request.getParameter("password");
	        String strSessionId = request.getParameter("sessionid");
	        String strObjId = request.getParameter("id");
        	String strNodeType = request.getParameter("nodetype");

			String path = "/spherm/app/hedata/export/web/";
        
		 if (!strNodeType.equals("ncm-object")) {
			    throw new IllegalArgumentException("Provided object is of wrong type!");
			}

			if ((strUser == null || strPasswd == null) && strSessionId == null)
			    throw new IllegalArgumentException("User credentials required!");

			try {
			    if (strSessionId != null)
				ds = (NCMDataSource) DataSource.newInstance(strSessionId);
			    else
				ds = (NCMDataSource) DataSource.newInstance(strUser, strPasswd);

			    String[] sa = strObjId.split(":");
			    NCMObjectPK objPK = new NCMObjectPK(Integer.parseInt(sa[0]),
				    Integer.parseInt(sa[1]), NCMObjectPK.LAST_VERSION, NCMObjectPK.ACTIVE);

			    StoryPackageExport spExp = new StoryPackageExport(ds);
			    File file = new File(path + sa[0] + ".xml");
			    spExp.export(objPK, file);

			    //set saxon as transformer
				System.setProperty("javax.xml.transform.TransformerFactory", "net.sf.saxon.TransformerFactoryImpl");

				SimpleXSLT sx = new SimpleXSLT();
				
				// Transform
				//String xslFile = "/jboss/server/HERMES/deploy/xmltest.war/xsl/sp.xsl";
				String xslFile = "/spherm/jboss/jboss-4.2.3.GA/server/HERMES/deploy/xmltest.war/xsl/sp.xsl";
				//sx.simpleTransformFile(path + sa[0] + ".xml", xslFile, path + "out-" + sa[0] + ".html");
								
				out.println(sx.simpleTransform(path + sa[0] + ".xml", xslFile));				
								
			} catch (Exception e) {
			    log("", e);
			    response.sendError(response.SC_CONFLICT, e.toString());
			} finally { 
			    out.close();
			    if (ds != null) ds.logout();
		}
		
		
		
		
%>
 

<%!
public class SimpleXSLT {

	//public void simpleTransform(String source, String xslt, String dest) {
	
	public String simpleTransform(String source, String xslt) {
		TransformerFactory tFactory = TransformerFactory.newInstance();
		StringWriter xmlOutWriter = new StringWriter();
			
		try {
			Transformer transformer = tFactory.newTransformer(new StreamSource(new File(xslt)));
			//transformer.transform(new StreamSource(new File(source)), new StreamResult(new File(dest)));
			
			transformer.transform(new StreamSource(new File(source)), new StreamResult(xmlOutWriter));
			//out.println(xmlOutWriter.toString());

			
		} catch (Exception e) {
			e.printStackTrace();
		}
	return xmlOutWriter.toString();
	}


        public void simpleTransformFile(String source, String xslt, String dest) {
                TransformerFactory tFactory = TransformerFactory.newInstance();

                try {
                        Transformer transformer = tFactory.newTransformer(new StreamSource(new File(xslt)));
                        transformer.transform(new StreamSource(new File(source)), new StreamResult(new File(dest)));

                } catch (Exception e) {
                        e.printStackTrace();
                }
        }

}
%>


